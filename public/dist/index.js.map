{"version":3,"sources":["src/client/index.tsx","src/client/components/signage/MainFrame.tsx","src/share/util.ts","src/client/components/mobile/MobileApp.tsx","src/client/components/mobile/LinksListWrapper.tsx","src/client/components/mobile/LinksListContent.tsx"],"names":[],"mappings":"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","file":"","sourcesContent":["import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.min.css\";\nimport axios, {AxiosResponse} from \"axios\";\nimport MainFrame from \"./components/signage/MainFrame\";\nimport {MobileApp} from \"./components/mobile/MobileApp\";\n\nwindow.onload = async () => {\n    console.log(\"hello!\");\n\n    if (location.pathname.includes(\"mobile\")) {\n        /*モバイルページ用コンポーネントを読み込む*/\n        ReactDOM.render( <MobileApp/>, document.getElementById(\"root\"))\n    } else if (location.pathname.includes(\"signage\")) {\n        /*サイネージ用コンポーネントを読み込む*/\n        const json = await axios.get(\"osusume.json\").catch(e => console.error(e)) as AxiosResponse;\n        console.dir(json.data);\n        ReactDOM.render((\n            <MainFrame dataArray={json.data} />\n        ),document.getElementById(\"root\"));\n    }\n};","import * as React from \"react\";\nimport axios, {AxiosResponse} from \"axios\";\nimport {css} from 'emotion'\nimport {CardInfo, ConnecTouchLink, OsusumeJson} from \"../../../share/types\";\nimport {OsusumeGird} from \"./OsusumeGrid\";\nimport {Simulate} from \"react-dom/test-utils\";\nimport load = Simulate.load;\nimport {isKeyWordContained, sendMail} from \"../../../share/util\";\n\nconst container = css({});\n\n/*アクセスするサーバー*/\nconst endpoint = \"http://192.168.0.200\";\n\n/*8番ラズパイのLinksを監視する*/\nconst observeReaderId = \"192.168.0.208\";\n/*JSONを保存して格納する*/\nconst osusumeList: Array<OsusumeJson> = [];\n\n/*取得したlinksをローカルの配列として保持する*/\nconst storedLinks: Array<ConnecTouchLink> = [];\n\n/*参加者情報のテーブルを取ってくる*/\nconst userInfoTable: Array<CardInfo> = [];\n\nclass MainFrame extends React.Component<{\n    dataArray: Array<OsusumeJson>\n}> {\n\n    constructor(props) {\n        super(props);\n        const {dataArray} = props;\n        this.state = {\n            dataArray: dataArray\n        }\n    }\n\n    /*おすすめリストを保持しておく関数*/\n    /*最初に実行する*/\n    storeOsusumeList = async () => {\n        Object.assign(osusumeList , this.props.dataArray);\n    };\n\n    /*参加者のプロフィールを取ってくる関数*/\n    getUserInfo = async () => {\n        const endPointUrl = `${endpoint}/info`;\n\n        const response = await axios.get(endPointUrl);\n        const infoLinks = response.data as Array<CardInfo>;\n\n        infoLinks.forEach(item => {\n            userInfoTable.push(item);\n        });\n    };\n\n    pollingLinks = async () => {\n        /*192.168.0.200/linksから紐付いたlinksを取得する*/\n        /*Paramsにidを追加しない場合全てのリーダーのイベントを取得できる*/\n        const endPointUrl = `${endpoint}/links?id=${observeReaderId}&limit=100`;\n        const request = await axios.get(endPointUrl);\n        const loadedLinks: Array<ConnecTouchLink> = request.data;\n        /*新しく追加されたLinksを求める*/\n        this.getDiff(storedLinks, loadedLinks);\n        /*ローカルの配列を新しい配列に上書きする*/\n        storedLinks.length = 0;\n        Object.assign(storedLinks, loadedLinks);\n    };\n\n    notificate = (message: string) => {\n        // // ブラウザが通知をサポートしているか確認する\n        // if (!(\"Notification\" in window)) {\n        //     alert(\"このブラウザはシステム通知をサポートしていません\");\n        // }\n        //\n        // // すでに通知の許可を得ているか確認する\n        // else if (Notification.permission === \"granted\") {\n        //     // 許可を得ている場合は、通知を作成する\n        //     new Notification(message);\n        // }\n        //\n        // // 許可を得ていない場合は、ユーザに許可を求めなければならない\n        // else if (Notification.permission !== 'denied') {\n        //     Notification.requestPermission(function (permission) {\n        //         // ユーザが許可した場合は、通知を作成する\n        //         if (permission === \"granted\") {\n        //             new Notification(message);\n        //         }\n        //     });\n        // }\n        // Notification.requestPermission(function(result) {\n        //     if (result === 'granted') {\n        //         navigator.serviceWorker.ready.then(function(registration) {\n        //             registration.showNotification(`Notification with ServiceWorker : ${message}`);\n        //         });\n        //     }\n        // });\n    };\n\n    getDiff = (oldLinks: Array<ConnecTouchLink>, newLinks: Array<ConnecTouchLink>) => {\n        /*newLinksにあってoldLinksに無いものは新しいものとする*/\n        /*あるかないかの確認はmongoDBのレコードIdを元に行う*/\n        const oldIdArray = oldLinks.map(link => link._id.$oid);\n\n        /*レコードIdを元に存在しているかを真偽値で返す関数*/\n        const isContained = (link) => {\n            return oldIdArray.includes(link._id.$oid);\n        };\n\n        /*newLinksにあってoldLinksに無いものだけを集めた配列を作る*/\n        const diffLinks = newLinks.reduce((prev, curr) => {\n            if (!isContained(curr)) {\n                prev.push(curr)\n            }\n            return prev\n        }, []);\n\n        if (diffLinks.length != 0 && diffLinks.length < 2) {\n            console.log(`新しいタッチイベントが${diffLinks.length}件発生しました!`);\n            /*例えば自分が1番の場合は監視するフィルタも作れる*/\n            diffLinks.forEach(async link => {\n                /*リーダーIDが自分のIDと一致する場合*/\n                if (link.link[0] === observeReaderId) {\n                    console.log(`${link.link[1]}が私にタッチした!`);\n                    const filteredList = await this.filterList(link.link[1]);\n                    console.dir(filteredList);\n                    if (filteredList.length === 0) {\n                        /*推薦するものが無ければ特に何もしない*/\n                    } else {\n                        this.setState({dataArray:filteredList});\n                        console.dir(this.state);\n                        this.notificate(\"新しいタッチイベントを検出しました!\");\n                        // sendMail(\"user4@192.168.0.200\", \"テストです\", `${filteredList.toString()}`)\n                        //     .then(response => {\n                        //         if (response) {\n                        //             console.log(\"メールの送信に成功しました!\");\n                        //         } else {\n                        //             console.log(\"メールの送信に失敗しました...\");\n                        //         }\n                        //     })\n                        //     .catch(error => {\n                        //         console.error(error);\n                        //     });\n                    }\n                }\n            })\n        }\n\n    };\n\n    filterList = async (id: string): Promise<Array<OsusumeJson>> => {\n        const user = userInfoTable.find(item => {\n            return item.id === id\n        });\n\n        const userFavWords = user.keywords;\n        console.dir(userFavWords);\n\n        const filteredShopList: Array<OsusumeJson> = [];\n\n        osusumeList.forEach(async (item: OsusumeJson) => {\n            if (await isKeyWordContained(userFavWords, item.keywords)) {\n                console.log(`keyword detected! : ${item.title}`);\n                filteredShopList.push(item);\n            }\n        });\n\n        /*生成したものを返す*/\n        return new Promise((resolve, reject) => {\n            resolve(filteredShopList);\n        });\n    };\n\n    registerServiceWorker = () => {\n        navigator.serviceWorker.register('/sw.js')\n            .then(registered => {\n                console.log('SW registered!', registered);\n            })\n            .catch(error => {\n                console.error(error );\n            });\n    };\n\n    componentDidMount() {\n        /*workerを登録*/\n        this.registerServiceWorker();\n        /*オリジナルのOsusumeJsonを確保*/\n        this.storeOsusumeList();\n        /*参加者のプロフィールを取得する*/\n        this.getUserInfo();\n        setInterval(() => {\n            this.pollingLinks();\n        }, 1000);\n    }\n\n    render() {\n        return (\n            <div className={container}>\n                <h1>ConnecTouch Signage</h1>\n            </div>\n        );\n    }\n}\n\nexport default MainFrame;","import axios, {AxiosResponse} from \"axios\";\n\n/*メールを送る関数*/\nconst sendMail = async (to: string, subject: string, body: string) : Promise<boolean> => {\n    return new Promise((resolve, reject) => {\n        axios.post(\"http://192.168.0.200/mail\",\n            {\n                to: to,\n                subject: subject,\n                body: body\n            })\n            .then( response => {\n                if (response.status === 200) {\n                    resolve(true);\n                } else {\n                    reject(false);\n                }\n            })\n            .catch( error => {\n                console.error(error);\n                reject(error);\n            })\n    });\n};\n\n/*利用者のkeywordsと店のkeywordsとの間で共通するものを返す関数*/\nconst isKeyWordContained = async (userWords: Array<string>, shopWords: Array<string>): Promise<boolean> => {\n    return new Promise((resolve, reject) => {\n        userWords.forEach(word => {\n            if (shopWords && shopWords.includes(word)) {\n                resolve(true);\n            }\n        });\n    });\n};\n\nexport const client = axios.create({\n    //baseURL: \"http://192.168.0.200/\",\n    // baseURL: \"http://connectouch.org/\",\n    timeout: 5000,\n    withCredentials: false,\n    validateStatus: _ => true,\n    headers: {\n        // Accept: \"application/text/plain\",\n        // \"Content-Type\": \"application/text/plain\",\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        // \"Access-Control-Allow-Headers\":\"Content-Type\",\n        // \"Access-Control-Allow-Methods\": \"GET,HEAD,PUT,PATCH,POST,DELETE\"\n    }\n});\n\nexport function get(url: string, Params: any): Promise<AxiosResponse> {\n    return new Promise<AxiosResponse>((resolve, reject) => {\n        client\n            .get(url, { params: Params })\n            .then(response => {\n                resolve(response);\n            })\n            .catch(response => {\n                reject(response);\n            });\n    });\n}\n\nexport function post(url: string, Params: any): Promise<AxiosResponse> {\n    return new Promise<AxiosResponse>((resolve, reject) => {\n        client\n            .post(url, { params: Params })\n            .then(response => {\n                resolve(response);\n            })\n            .catch(response => {\n                reject(response);\n            });\n    });\n}\n\nexport function put(url: string, Params: any): Promise<AxiosResponse> {\n    return new Promise<AxiosResponse>((resolve, reject) => {\n        client\n            .put(url, { params: Params })\n            .then(response => {\n                resolve(response);\n            })\n            .catch(response => {\n                reject(response);\n            });\n    });\n}\n\nexport function delete_req(url: string, Params: any): Promise<AxiosResponse> {\n    return new Promise<AxiosResponse>((resolve, reject) => {\n        client\n            .delete(url, { params: Params })\n            .then(response => {\n                resolve(response);\n            })\n            .catch(error => {\n                reject(error);\n            });\n    });\n}\n\n\n\nexport { sendMail, isKeyWordContained }","import * as React from \"react\";\nimport {Layout, BackTop} from \"antd\";\n\nconst {Header, Content} = Layout;\nimport {css} from \"emotion\";\nimport {LinksListWrapper} from \"./LinksListWrapper\";\n\nconst headerArea = css({\n    width: \"100vw\",\n    height: \"10vh\"\n});\n\nconst headerTxt = css({\n    color: \"#ffffff\",\n    textAlign: \"center\",\n    position: \"relative\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n});\n\nconst contentArea = css({\n    fontFamily: \"sans-serif\",\n    width: \"100vw\",\n    height: \"100vh\"\n});\n\nexport const MobileApp = () => (\n    <div className={headerArea}>\n        <Layout>\n            <Header className={headerArea}>\n                <h2 className={headerTxt}>ConnecTouch Mobile</h2>\n            </Header>\n            <Content>\n                <LinksListWrapper/>\n            </Content>\n            <BackTop/>\n        </Layout>\n    </div>\n);","import * as React from \"react\";\nimport {FC} from \"react\";\nimport {css} from \"emotion\";\nimport {notification} from \"antd\";\nimport {LinksListContent} from \"./LinksListContent\";\nimport \"dotenv/config\";\nimport {CardInfo, ConnecTouchLink} from \"../../../share/types\";\nimport {get} from \"../../../share/util\";\n\nconst {useState, useEffect, useContext} = React;\nconst fetchURL = process.env.FETCH_URL || \"http://192.168.0.200\";\nconst myCardID = \"010104128215612b\";\nconst filteredLinks: ConnecTouchLink[] = [];\n//const userInfoTable: CardInfo[] = [];\n\nconst container = css({\n    fontFamily: \"sans-serif\",\n    width: \"100vw\",\n    marginTop: \"5%\",\n    marginBottom: \"5%\",\n});\n\n/*リストビューの本体*/\n/*ClassComponentではない*/\nexport const LinksListWrapper: FC<{}> = () => {\n    const [isActivated, setActivate] = useState(false);\n    const [filter, setFilter] = useState(\"\");\n    const [links, setLinks] = useState([] as ConnecTouchLink[]);\n    const [fetchLimitNum, setLimit] = useState(10);\n    const [userInfoTable, setUserInfoTable] = useState([] as CardInfo[]);\n\n    useEffect(() => {\n        fetch(`${fetchURL}/info`)\n            .then(async (response) => {\n                const data = await response.json();\n                setUserInfoTable(data);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n        const timerId = setInterval(polingLinks, 1000);\n        return () => clearInterval(timerId);\n    }, [fetchLimitNum, links]);\n\n    const polingLinks = async () => {\n        const currentLinks = links;\n        const endPointUrl = `${fetchURL}/links?limit=${fetchLimitNum}`;\n        const request = await fetch(endPointUrl);\n        if (request.status === 200) {\n            try {\n                const loadedLinks = (await request.json()) as ConnecTouchLink[];\n                getLinksDiff(currentLinks, loadedLinks);\n                setLinks(loadedLinks);\n            } catch (err) {\n                console.error(err);\n            }\n        } else {\n            console.log(\"something went wrong\");\n        }\n    };\n\n    const IncrementFetchLimitNum = () => {\n        setLimit(fetchLimitNum + 10);\n    };\n\n\n    const filterLink = (newLink: ConnecTouchLink) => {\n        /*自分のIDと一致する*/\n        if (newLink.link.cardId === myCardID) {\n            filteredLinks.push(newLink);\n        }\n        /*自分のsecretと一致する*/\n        const myInfo = userInfoTable.find(user => return filteredLinks)\n\n    };\n\n    const getLinksDiff = (oldLinks: ConnecTouchLink[], newLinks: ConnecTouchLink[]) => {\n        const oldIdArray = oldLinks.map(item => item._id.$oid);\n\n        const isContained = (link: ConnecTouchLink): boolean => {\n            return oldIdArray.includes(link._id.$oid);\n        };\n\n        const diffLinks = newLinks.reduce((prev, curr) => {\n            !isContained(curr) && prev.push(curr);\n            return prev;\n        }, []);\n\n        if (diffLinks.length === 1) {\n            diffLinks.forEach(link => {\n                const parsedLink = link;\n                const readerId = parsedLink.link[0] as string;\n                const cardId = parsedLink.link[1] as string;\n                notification.info({\n                    message: \"Suicaがタッチされました。\",\n                    description: `リーダー：${readerId}\\nカード：${cardId}`,\n                });\n            });\n            const newLink = diffLinks[0];\n        }\n    };\n\n    return (\n        <div className={container}>\n            <LinksListContent\n                links={links}\n                fetchLimitNum={fetchLimitNum}\n                setLimit={IncrementFetchLimitNum}\n            />\n        </div>\n    );\n};\n","import * as React from \"react\";\nimport { FC } from \"react\";\nimport {css} from \"emotion\";\nimport { List, Avatar, Icon, Spin, Button } from \"antd\";\nimport {ConnecTouchLink} from \"../../../share/types\";\nimport \"moment/locale/ja\";\nimport * as moment from \"moment\";\n\nconst {} = React;\n\nconst demo_icon = \"./fakeUser.png\";\n\nconst linkListArea = css({\n    width: \"90vw\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n});\n\nconst spinner = css({\n    position: \"relative\",\n    top: \"50%\",\n    left: \"40vw\",\n    transform: \"translataY(-50%)\",\n});\n\nconst spinContainer = css({\n    height: \"50vh;\",\n});\n\nconst loadBtn = css({\n    display: \"block\",\n    marginTop: \"10%\",\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n});\n\ninterface Props {\n    links: ConnecTouchLink[];\n    fetchLimitNum: number;\n    setLimit: () => void;\n}\n\nexport const LinksListContent: FC<Props> = ({\n                                                links,\n                                                fetchLimitNum,\n                                                setLimit,\n                                            }) => {\n    const readable = (item: ConnecTouchLink) => {\n        const readerId = item.link[0];\n        const cardId = item.link[1];\n        const time = moment.unix(parseInt(item.time)).fromNow();\n        return {\n            cardId,\n            readerId,\n            time,\n        };\n    };\n\n    const SpinnerElm = <Icon type=\"loading\" spin style={{ fontSize: \"20vw\" }} />;\n\n    return links.length === 0 ? (\n        <div className={spinContainer}>\n            <Spin className={spinner} indicator={SpinnerElm} />\n        </div>\n    ) : (\n        <List\n            className={linkListArea}\n            itemLayout=\"vertical\"\n            dataSource={links}\n            loadMore={\n                <Button\n                    onClick={setLimit}\n                    className={loadBtn}\n                    loading={links.length != fetchLimitNum}\n                    size=\"large\"\n                    shape=\"round\"\n                >\n                    Load more\n                </Button>\n            }\n            renderItem={item => {\n                const { cardId, readerId, time } = readable(item);\n                return (\n                    <List.Item key={item.cardId}>\n                        <List.Item.Meta\n                            avatar={<Avatar src={demo_icon} />}\n                            title={<div>{cardId}</div>}\n                            description={\n                                <div>\n                                    {readerId} にタッチしました。\n                                    <span style={{ float: \"right\" }}>{time}</span>\n                                </div>\n                            }\n                        />\n                    </List.Item>\n                );\n            }}\n        />\n    );\n};\n"]}