{"version":3,"sources":["/src/client/index.tsx","/src/client/components/MainFrame.tsx","/src/client/components/OsusumeGrid.tsx"],"names":[],"mappings":"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","file":"","sourcesContent":["\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport axios, {AxiosResponse} from \"axios\";\nimport MainFrame from \"./components/MainFrame\";\n\n\nwindow.onload = async () => {\n    console.log(\"hello!\");\n    const json = await axios.get(\"osusume.json\").catch(e => console.error(e)) as AxiosResponse;\n    console.dir(json.data);\n    ReactDOM.render((\n        <MainFrame dataArray={json.data} />\n    ),document.getElementById(\"root\"));\n};","import * as React from \"react\";\nimport axios, {AxiosResponse} from \"axios\";\nimport {css} from 'emotion'\nimport {CardInfo, ConnecTouchLink, OsusumeJson} from \"../../share/types\";\nimport {OsusumeGird} from \"./OsusumeGrid\";\nimport {rejects} from \"assert\";\n\nconst container = css({});\n\n class MainFrame extends React.Component<{\n     dataArray : Array<OsusumeJson>\n }> {\n\n    constructor(props) {\n        super(props);\n        const {dataArray} = props;\n        this.state = {\n            dataArray : dataArray\n        }\n    }\n\n    pollingLinks = async (observeReaderId : string) => {\n        /*192.168.0.200/linksから紐付いたlinksを取得する*/\n        /*Paramsにidを追加しない場合全てのリーダーのイベントを取得できる*/\n        const endPointUrl = `http://192.168.0.200/links?id=${observeReaderId}&limit=100`;\n        const request = await axios.get(endPointUrl);\n        const loadedLinks : Array<ConnecTouchLink> = request.data;\n        /*新しく追加されたLinksを求める*/\n        //getDiff(storedLinks, loadedLinks)\n        /*ローカルの配列を新しい配列に上書きする*/\n    };\n\n    filterList = async (id : string, userInfoTable : Array<CardInfo>, osusumeList : Array<OsusumeJson>) : Promise<Array<OsusumeJson>> => {\n        const user = userInfoTable.find( item => {\n            return item.id === id\n        });\n\n        const userFavWords = user.keywords;\n        console.dir(userFavWords);\n\n        /*userFavWords内の単語があるかどうか調べる*/\n        const isContained = (list) => {\n            return new Promise((resolve, reject) => {\n                userFavWords.forEach( async (item : string) => {\n                    if (list.includes(item)) {\n                        resolve(true);\n                    }\n                } );\n            });\n        };\n\n        const favShops : Array<OsusumeJson> = [];\n\n        osusumeList.forEach(async (item : OsusumeJson) => {\n            if (await isContained(item.keywords)) {\n                console.log(`keyword detected! : ${item.title}`);\n                favShops.push(item);\n            }\n        });\n\n        /*生成したものを返す*/\n        return new Promise((resolve, reject) => {\n            resolve(favShops);\n        });\n    };\n\n    componentDidMount() {\n        /*JSONを保存して格納する*/\n        let osusumeList : Array<OsusumeJson> = [];\n\n        /*8番ラズパイのLinksを監視する*/\n        const observeReaderId = \"192.168.0.208\";\n        /*取得したlinksをローカルの配列として保持する*/\n        let storedLinks : Array<ConnecTouchLink> = [];\n\n        /*参加者情報のテーブルを取ってくる*/\n        let userInfoTable : Array<CardInfo> = [];\n\n        /*参加者のプロフィールを取ってくる関数*/\n        const getUserInfo = async () => {\n            const endPointUrl = `http://192.168.0.200/info`;\n\n            // const request = await fetch(endPointUrl).catch(e => console.error(e));\n            // const infoLinks : Response = await request.json();\n            //\n            // userInfoTable = infoLinks\n            // console.dir(userInfoTable);\n\n            const response = await axios.get(endPointUrl);\n            const infoLinks = response.data as Array<CardInfo>;\n\n            infoLinks.forEach(item => {\n                userInfoTable.push(item);\n            });\n\n            //userInfoTable.push([..infoLinks])\n\n        };\n\n    }\n\n    render() {\n        return (\n            <div className={container}>\n                <h1>ConnecTouch Signage</h1>\n                <OsusumeGird dataLists={this.props.dataArray}/>\n            </div>\n        );\n    }\n}\n\nexport default MainFrame;","import * as React from \"react\";\nimport {ReactDOM, ReactNode, SFC} from \"react\";\nimport {OsusumeJson} from \"../../share/types\";\nimport {css} from \"emotion\";\n\nconst gridContainer = css({\n    display : \"flex\",\n    flexDirection : \"row\",\n    flexWrap : \"wrap\",\n    justifyContent : \"space-around\",\n    alignContent : \"space-between\"\n});\nconst gridItem = css({\n    textAlign : \"center\"\n});\nconst gridImage = css({\n    objectFit : \"contain\"\n});\n\nexport const OsusumeGird:SFC<{dataLists : Array<OsusumeJson>}> = props => {\n\n    const dataLists = props.dataLists.forEach((item) => {\n            <div className={gridItem}>\n                <h3>{item.title}</h3>\n                <img className={gridImage} src={`img/${encodeURI(item.title)}.jpg`}/>\n            </div>\n    });\n\n    return (\n        <div className={gridContainer}>\n            {{dataLists}}\n        </div>\n    );\n};"]}